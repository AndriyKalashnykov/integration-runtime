<?xml version="1.0" encoding="UTF-8"?>
<blueprint
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext xmlns="http://camel.apache.org/schema/blueprint">
        
        <!-- 
        	En route som inleds via en timer. Var 5e sekund vaknar timern
        	och skickar meddelande till eventPersistance, som tar reda på
        	nästa meddelandenummer att hämta. Anropet går sedan vidare 
        	till feedFetcher som hämtar en lista av händelser 
        	( List<Entry> ), splittar dessa och skickar till ändpunkten
        	direct:distribute
         -->
        <route>
        	<from uri="timer://ladok?fixedRate=true&amp;period=5000&amp;repeatCount=0"/>
        	<to uri="bean:eventPersistance?method=getNextEventNumber"/>
        	<to uri="bean:feedFetcher?method=getEntries"/>
        	<split streaming="true">
        		<simple>${body}</simple>
        		<to uri="direct:distribute"/>
        	</split>
        </route>
          
        <!-- 
        	Sparar meddelandet i loggen via eventPersistance och omvandlar
        	sedan kroppen till strängform för att undvika problem vid 
        	JMS-serialiseringen. Därefter sprids meddelandet.
         -->
        <route>
        	<from uri="direct:distribute"/>
        	<to uri="bean:eventPersistance?method=saveEntry"/>
        	<convertBodyTo type="java.lang.String"/>
        	<multicast stopOnException="true">
        		<to uri="activemq:ladok-logdb"/>
        		<to uri="activemq:ladok-uudb"/>
    		</multicast>
        </route>
    </camelContext>
    
	<bean id="eventPersistance" class="se.uu.its.skutt.ladok3.feeds.FileBasedEventPersistance" />
	<bean id="feedFetcher" class="se.uu.its.skutt.ladok3.feeds.FeedFetcher"/>
	
</blueprint>